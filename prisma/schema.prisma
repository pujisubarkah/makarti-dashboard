generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["makarti"]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bigger_score {
  id                BigInt   @id @default(autoincrement())
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  unit_kerja_id     Int?
  bulan             Int?
  tahun             Int?
  dampak_luas       Float?   @db.Real
  kolaborasi        Int?
  penerima_manfaat  Int?
  jangkauan_wilayah Int?
  total_skor        Float?   @db.Real
  users             users?   @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([unit_kerja_id, bulan, tahun], map: "bigger_score_unique_per_bulan")
  @@schema("makarti")
}

model broadcastmessage {
  id            Int             @id(map: "BroadcastMessage_pkey") @default(autoincrement())
  sender_id     Int
  message       String
  type          String          @db.VarChar(20)
  createdAt     DateTime        @default(now()) @db.Timestamp(6)
  users         users           @relation(fields: [sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  broadcastread broadcastread[]

  @@schema("makarti")
}

model broadcastread {
  id               Int              @id(map: "BroadcastRead_pkey") @default(autoincrement())
  user_id          Int
  message_id       Int
  readAt           DateTime         @default(now()) @db.Timestamp(6)
  broadcastmessage broadcastmessage @relation(fields: [message_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users            users            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, message_id], map: "BroadcastRead_user_id_message_id_key")
  @@schema("makarti")
}

model evaluasi_unit_kerja {
  id            Int       @id @default(autoincrement())
  unit_kerja_id Int       @unique
  inovasi       Decimal   @db.Decimal
  learning      Decimal   @db.Decimal
  komunikasi    Decimal   @db.Decimal
  networking    Decimal   @db.Decimal
  better_score  Decimal   @db.Decimal
  bigger_score  Decimal   @db.Decimal
  smarter_score Decimal   @db.Decimal
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  status        String?
  users         users     @relation(fields: [unit_kerja_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_unit_kerja")

  @@schema("makarti")
}

model event_assignments {
  id             Int            @id @default(autoincrement())
  event_id       Int
  employee_id    Int
  role_id        Int
  confirmed      Boolean?       @default(false)
  pegawai        pegawai        @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  event_schedule event_schedule @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  event_roles    event_roles    @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("makarti")
}

model event_roles {
  id                Int                 @id @default(autoincrement())
  role_name         String              @unique @db.VarChar(50)
  event_assignments event_assignments[]

  @@schema("makarti")
}

model event_schedule {
  id                Int                 @id @default(autoincrement())
  unit_kerja_id     Int
  date              DateTime            @db.Date
  title             String              @db.VarChar(255)
  location          String?             @db.VarChar(255)
  time              String?             @db.VarChar(50)
  type              String?             @db.VarChar(50)
  priority          String?             @db.VarChar(20)
  attendees         Int?                @default(0)
  description       String?
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  event_assignments event_assignments[]
  users             users               @relation(fields: [unit_kerja_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_unit_kerja_user")

  @@schema("makarti")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model inovasi {
  id            Int      @id(map: "Inovasi_pkey") @default(autoincrement())
  judul         String
  tahap         String
  tanggal       DateTime
  indikator     String
  unit_kerja_id Int?
  users         users?   @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Inovasi_unit_kerja_id_fkey")

  @@schema("makarti")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model jenis_bangkom_non_pelatihan {
  id              Int               @id @default(autoincrement())
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  jenis_bangkom   String?
  penyelenggaraan penyelenggaraan[]

  @@schema("makarti")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model kajian {
  id            Int      @id @default(autoincrement())
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  judul         String?
  jenis         String?
  status        String?
  unit_kerja_id Int?
  users         users?   @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("makarti")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model koordinasi {
  id            Int      @id(map: "Koordinasi_pkey") @default(autoincrement())
  tanggal       DateTime
  instansi      String
  jenisInstansi String
  topik         String
  catatan       String?
  unit_kerja_id Int
  createdAt     DateTime @default(now())
  Status        String?
  users         users    @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Koordinasi_unit_kerja_id_fkey")

  @@schema("makarti")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model networking {
  id            Int      @id(map: "Networking_pkey") @default(autoincrement())
  instansi      String
  jenis         String
  catatan       String
  unit_kerja_id Int
  createdAt     DateTime @default(now())
  status        String?
  users         users    @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Networking_unit_kerja_id_fkey")

  @@schema("makarti")
}

model notification {
  id            Int       @id @default(autoincrement())
  sender_id     Int
  receiver_id   Int?
  receiver_role String?   @db.VarChar(10)
  message       String
  type          String?   @default("info") @db.VarChar(20)
  is_read       Boolean?  @default(false)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  users         users     @relation(fields: [sender_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sender")

  @@index([created_at])
  @@index([receiver_id])
  @@index([receiver_role])
  @@schema("makarti")
}

model org_departments {
  id        Int         @id(map: "departments_pkey") @default(autoincrement())
  name      String      @unique(map: "departments_name_key") @db.VarChar(255)
  color     String?     @db.VarChar(255)
  org_units org_units[]

  @@schema("makarti")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model org_kpis {
  id        Int       @id(map: "kpis_pkey") @default(autoincrement())
  unit_id   Int       @unique(map: "kpis_unit_id_key")
  target    Int
  achieved  Int
  status    String    @db.VarChar(20)
  org_units org_units @relation(fields: [unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "kpis_unit_id_fkey")

  @@schema("makarti")
}

model org_metrics {
  id         Int       @id(map: "metrics_pkey") @default(autoincrement())
  unit_id    Int       @unique(map: "metrics_unit_id_key")
  inovasi    Int
  komunikasi Int
  networking Int
  learning   Int
  org_units  org_units @relation(fields: [unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "metrics_unit_id_fkey")

  @@schema("makarti")
}

model org_positions {
  id        Int         @id(map: "positions_pkey") @default(autoincrement())
  title     String      @unique(map: "positions_title_key") @db.VarChar(255)
  org_units org_units[]

  @@schema("makarti")
}

model org_units {
  id              Int             @id(map: "units_pkey") @default(autoincrement())
  name            String          @db.VarChar(255)
  position_id     Int
  department_id   Int
  level           Int
  parent_id       Int?
  unit_kerja_id   Int?
  org_kpis        org_kpis?
  org_metrics     org_metrics?
  users           users?          @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "org_units_users_fk")
  org_departments org_departments @relation(fields: [department_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "units_department_id_fkey")
  org_units       org_units?      @relation("org_unitsToorg_units", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "units_parent_id_fkey")
  other_org_units org_units[]     @relation("org_unitsToorg_units")
  org_positions   org_positions   @relation(fields: [position_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "units_position_id_fkey")

  @@schema("makarti")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pegawai {
  id                Int                 @id @default(autoincrement())
  created_at        DateTime            @default(now()) @db.Timestamptz(6)
  nip               String?             @default("18") @db.VarChar
  nama              String?             @default("225") @db.VarChar
  unit_kerja_id     Int?
  jabatan           String?
  golongan          String?             @db.VarChar
  eselon            String?             @db.VarChar(10)
  event_assignments event_assignments[]
  users             users?              @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pegawai_detail    pegawai_detail[]
  pelatihan         pelatihan[]

  @@schema("makarti")
}

model pegawai_detail {
  id                 Int       @id @default(autoincrement())
  pegawai_id         Int
  email              String?   @db.VarChar(255)
  unit_kerja         String?   @db.VarChar(255)
  status_kepegawaian String?   @db.VarChar(100)
  alamat             String?
  pendidikan         String?   @db.VarChar(100)
  telp               String?   @db.VarChar(50)
  tanggal_lahir      DateTime? @db.Date
  jenis_kelamin      String?   @db.VarChar(20)
  nm_goldar          String?   @db.VarChar(5)
  peg_cpns_tmt       DateTime? @db.Date
  nip                String?   @db.VarChar(20)
  pegawai            pegawai   @relation(fields: [pegawai_id], references: [id], onDelete: Cascade, map: "fk_pegawai")

  @@schema("makarti")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pelatihan {
  id            Int      @id(map: "Pelatihan_pkey") @default(autoincrement())
  pegawai_id    Int
  unit_kerja_id Int
  judul         String
  jam           Int
  tanggal       DateTime
  sertifikat    String?  @db.VarChar
  pegawai       pegawai  @relation(fields: [pegawai_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Pelatihan_pegawai_id_fkey")
  users         users    @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Pelatihan_unit_kerja_id_fkey")

  @@schema("makarti")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model penyelenggaraan {
  id                          Int                         @id(map: "Penyelenggaraan_pkey") @default(autoincrement())
  namaKegiatan                String
  tanggal                     DateTime
  jenis_bangkom_id            Int
  jumlahPeserta               Int
  unit_kerja_id               Int?
  daftar_hadir                String?                     @db.VarChar
  jenis_bangkom_non_pelatihan jenis_bangkom_non_pelatihan @relation(fields: [jenis_bangkom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Penyelenggaraan_jenis_bangkom_id_fkey")
  users                       users?                      @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Penyelenggaraan_unit_kerja_id_fkey")

  @@schema("makarti")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model produkInovasi {
  id             Int            @id(map: "ProdukInovasi_pkey") @default(autoincrement())
  nama           String
  jenis          String
  status_id      Int
  tanggalRilis   DateTime
  keterangan     String?
  unit_kerja_id  Int?
  status_inovasi status_inovasi @relation(fields: [status_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ProdukInovasi_status_id_fkey")
  users          users?         @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ProdukInovasi_unit_kerja_id_fkey")

  @@schema("makarti")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model publikasi {
  id            Int      @id(map: "Publikasi_pkey") @default(autoincrement())
  judul         String
  tanggal       DateTime
  jenis         String
  unit_kerja_id Int
  link          String
  likes         Int?
  views         Int?
  createdAt     DateTime @default(now())
  users         users    @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Publikasi_unit_kerja_id_fkey")

  @@schema("makarti")
}

model rekap_skor_unit_kerja {
  id                             Int      @id @default(autoincrement())
  unit_kerja_id                  Int?
  learning_pelatihan_score       Decimal? @db.Decimal
  learning_penyelenggaraan_score Decimal? @db.Decimal
  total_learning_score           Decimal? @db.Decimal
  branding_engagement_rate       Decimal? @db.Decimal
  branding_engagement_score      Decimal? @db.Decimal
  branding_publikasi_total       BigInt?
  branding_publikasi_score       Decimal? @db.Decimal
  branding_score                 Decimal? @db.Decimal
  networking_kerjasama_score     Decimal? @db.Decimal
  networking_koordinasi_score    Decimal? @db.Decimal
  networking_score               Decimal? @db.Decimal
  inovasi_kinerja_score          Decimal? @db.Decimal
  inovasi_kajian_score           Decimal? @db.Decimal
  inovasi_score                  Decimal? @db.Decimal
  bigger_score                   Decimal? @db.Decimal
  smarter_score                  Decimal? @db.Decimal
  better_score                   Decimal? @db.Decimal
  users                          users?   @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rekap_skor_unit_kerja_users_fk")

  @@schema("makarti")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model role_user {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  role_user  String?
  users      users[]

  @@schema("makarti")
}

model serapan_anggaran {
  id                    Int       @id @default(autoincrement())
  bulan                 String    @db.VarChar(20)
  pagu_anggaran         Decimal   @db.Decimal(18, 2)
  realisasi_pengeluaran Decimal   @db.Decimal(18, 2)
  unit_kerja_id         Int
  created_at            DateTime? @default(now()) @db.Timestamp(6)
  updated_at            DateTime? @default(now()) @db.Timestamp(6)
  users                 users     @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("makarti")
}

model skptransformational {
  id            Int      @id(map: "SkpTransformasional_pkey") @default(autoincrement())
  pegawai       String
  unit_kerja_id Int
  inovasi       String
  target        String
  status        String
  dampak        String?
  createdAt     DateTime @default(now())
  users         users    @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "SkpTransformasional_unit_kerja_id_fkey")

  @@schema("makarti")
}

model sosialisasi {
  id            Int      @id(map: "Sosialisasi_pkey") @default(autoincrement())
  nama          String
  tanggal       DateTime
  jenis         String
  platform      String
  unit_kerja_id Int
  peserta       Int
  createdAt     DateTime @default(now())
  users         users    @relation(fields: [unit_kerja_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Sosialisasi_unit_kerja_id_fkey")

  @@schema("makarti")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model status_inovasi {
  id            Int             @id @default(autoincrement())
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  status        String?         @db.VarChar
  produkInovasi produkInovasi[]

  @@schema("makarti")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  created_at            DateTime                @default(now()) @db.Timestamptz(6)
  unit_kerja            String?
  username              String                  @db.VarChar @unique
  password              String?                 @db.VarChar
  id                    Int                     @id @unique @default(autoincrement())
  role_id               Int?
  alias                 String?                 @db.VarChar(255)
  role                  String?                 @db.VarChar(10)
  bigger_score          bigger_score[]
  broadcastmessage      broadcastmessage[]
  broadcastread         broadcastread[]
  evaluasi_unit_kerja   evaluasi_unit_kerja?
  event_schedule        event_schedule[]
  inovasi               inovasi[]
  kajian                kajian[]
  koordinasi            koordinasi[]
  networking            networking[]
  notification          notification[]
  org_units             org_units[]
  pegawai               pegawai[]
  pelatihan             pelatihan[]
  penyelenggaraan       penyelenggaraan[]
  produkInovasi         produkInovasi[]
  publikasi             publikasi[]
  rekap_skor_unit_kerja rekap_skor_unit_kerja[]
  serapan_anggaran      serapan_anggaran[]
  skptransformational   skptransformational[]
  sosialisasi           sosialisasi[]
  role_user             role_user?              @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("makarti")
}
